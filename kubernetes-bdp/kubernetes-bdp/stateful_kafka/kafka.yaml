---
apiVersion: v1
kind: Service
metadata:
  name: bdp-private-kafka
  labels:
    app: bdp-private-kafka
spec:
  ports:
  - port: 9092
    name: kafka-port
    targetPort: 9092
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: bdp-private-kafka-port
  labels:
    app: bdp-private-kafka
spec:
  type: NodePort
  ports:
  - port: 9092
    name: kafka-port
    targetPort: 9092
    nodePort: 30000
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  minAvailable: 2
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: bdp-private-kafka
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
#      hostNetwork: true
      containers:
      - name: k8skafka
        imagePullPolicy: Always
        image: 10.16.0.144:5000/kafka/kafka-bdp-private-v1.0:20190509114458
        command: ["/export/servers/monit/bin/monit"]
        args: ["-I"]
        ports: 
        - containerPort: 9092
          hostPort: 9092
        volumeMounts:
        - name: kafka-datadir
          mountPath: /export/Data
  volumeClaimTemplates:
  - metadata:
      name: kafka-datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: stateful-kafka-storage-class
      resources:
        requests:
          storage: 500Gi
